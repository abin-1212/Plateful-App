// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;
import 'package:http/http.dart' as http;
import 'dart:convert';

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        return macos;
      case TargetPlatform.windows:
        return windows;
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static const FirebaseOptions web = FirebaseOptions(
    apiKey: 'AIzaSyAJJu8yMJxLCTIJ2zSIzdZwT8lk1N8Ip3Q',
    appId: '1:833668736619:web:79dce4a66ae18342aef32e',
    messagingSenderId: '833668736619',
    projectId: 'plateful-2285c',
    authDomain: 'plateful-2285c.firebaseapp.com',
    storageBucket: 'plateful-2285c.firebasestorage.app',
    measurementId: 'G-NJ3Y3F167X',
  );

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'AIzaSyByPC-UZQAFgodM_R9ckxrAkYWgLHqiBio',
    appId: '1:833668736619:android:d7f730ee3e68e0d8aef32e',
    messagingSenderId: '833668736619',
    projectId: 'plateful-2285c',
    storageBucket: 'plateful-2285c.firebasestorage.app',
  );

  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: 'AIzaSyA31_lqjEbiKlfzePnhCv3Ack9aAns2JT4',
    appId: '1:833668736619:ios:2d172f58115da9b3aef32e',
    messagingSenderId: '833668736619',
    projectId: 'plateful-2285c',
    storageBucket: 'plateful-2285c.firebasestorage.app',
    iosBundleId: 'com.example.plateful',
  );

  static const FirebaseOptions macos = FirebaseOptions(
    apiKey: 'AIzaSyA31_lqjEbiKlfzePnhCv3Ack9aAns2JT4',
    appId: '1:833668736619:ios:2d172f58115da9b3aef32e',
    messagingSenderId: '833668736619',
    projectId: 'plateful-2285c',
    storageBucket: 'plateful-2285c.firebasestorage.app',
    iosBundleId: 'com.example.plateful',
  );

  static const FirebaseOptions windows = FirebaseOptions(
    apiKey: 'AIzaSyAJJu8yMJxLCTIJ2zSIzdZwT8lk1N8Ip3Q',
    appId: '1:833668736619:web:5b12d7392be4e4aaaef32e',
    messagingSenderId: '833668736619',
    projectId: 'plateful-2285c',
    authDomain: 'plateful-2285c.firebaseapp.com',
    storageBucket: 'plateful-2285c.firebasestorage.app',
    measurementId: 'G-DKFQK9Z34P',
  );
}

Future<int> getPredictedDemand(Map<String, dynamic> input) async {
  final response = await http.post(
    Uri.parse('http://localhost:5000/predict'),
    headers: {'Content-Type': 'application/json'},
    body: jsonEncode(input),
  );
  if (response.statusCode == 200) {
    return jsonDecode(response.body)['predicted_demand'];
  } else {
    throw Exception('Failed to get prediction');
  }
}
